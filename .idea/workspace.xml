<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2698df33-ebb1-4f98-9655-2b6ca657bff9" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/json/db.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/json/index.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/providers/StoreProvider/config/StoreSchema.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/providers/StoreProvider/config/store.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/providers/StoreProvider/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/providers/routers/config/routerConfig.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/providers/routers/ui/AppRouter.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/app/styles/index.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/entities/ProductCurrent/model/reducer/productCurrent.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/entities/ProductCurrent/model/selectors/productCurrentSelector.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/entities/ProductCurrent/model/thunk/productCurrentThunk.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/entities/ProductCurrent/model/types/product.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/entities/ShowProduct/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/entities/ShowProduct/model/reducer/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/entities/ShowProduct/model/selectors/selectorProduct.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/entities/ShowProduct/model/thunk/getProduct.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/entities/ShowProduct/model/types/product.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/features/DataInfo/ui/DataInfo.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/features/DataInfo/ui/Datainfo.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/features/ProductCurrentInfo/ui/ProductCurrentInfo.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/features/ProductCurrentInfo/ui/ProductCurrentInfo.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/global.d.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/AboutUsPage/ui/AboutUs.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/AboutUsPage/ui/AboutUsPage.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/MainPage/ui/MainPage.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/MainPage/ui/MainPage.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/ProductPage/ui/ProductPage.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/shared/hooks/useAllDispatch/useAppDispatch.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/widgets/Header/ui/Header.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/widgets/Header/ui/Header.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/widgets/ShowData/ui/Data.module.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/widgets/ShowData/ui/Data.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/untitled.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/public/favicon.ico" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/public/logo192.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/public/logo512.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/public/manifest.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/public/robots.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/styles/App.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.test.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/App.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/logo.svg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/react-app-env.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/reportWebVitals.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/setupTests.ts" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2e7k3Iqou9qy6qbPg1Gk6XQABZa" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;ts.external.directory.path&quot;: &quot;C:\\Users\\user\\Desktop\\redux project\\node_modules\\typescript\\lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2698df33-ebb1-4f98-9655-2b6ca657bff9" name="Changes" comment="" />
      <created>1711262804043</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1711262804043</updated>
      <workItem from="1711262806597" duration="2654000" />
      <workItem from="1711265510107" duration="3279000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>